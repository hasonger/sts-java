/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * STSGui.java
 *
 * Created on Jun 8, 2012, 4:37:55 PM
 */
package stsdriver;

import gnu.io.CommPortIdentifier;
import java.util.Enumeration;
import java.util.prefs.Preferences;

/**
 *
 * @author jim006
 */
public class STSGui extends javax.swing.JFrame {

    /** Creates new form STSGui */
    public STSGui() {
        initComponents();
        prefs = Preferences.userRoot().node(this.getClass().getName());
        restorePreferences();
        sts = null;
    }
    
    private void initBBSerialPorts() {
        //
        // Get an enumeration of all ports known to JavaComm
        //
        Enumeration<CommPortIdentifier> portIdentifiers = CommPortIdentifier.getPortIdentifiers();
        String portName="";

        this.jcbSerialPort.removeAllItems();

        while (portIdentifiers.hasMoreElements())
        {
            CommPortIdentifier pid = (CommPortIdentifier) portIdentifiers.nextElement();

            if(pid.getPortType() == CommPortIdentifier.PORT_SERIAL)
            {
                portName=pid.getName();
                jcbSerialPort.addItem(portName);
                
            }
            if(serialPortID.equals(pid.getName())) jcbSerialPort.setSelectedItem(portName); //Selects the default Port            
        }

    }
    
    private void connectSTS() {
        sts = new STSDriver((String) jcbSerialPort.getSelectedItem());
        connected=true; //TODO: check if this is actually connected
        savePreferences();
    }
    
    private void restorePreferences() {
        try{
            
            
            serialPortID = prefs.get("COMPort", "COM1");
            jtfIntegrationTime.setText(prefs.get("IntegrationTime", "10000"));
            jtfAvgScans.setText(prefs.get("AvgScans", "1"));
            
        }
        catch(Exception e) {
            e.printStackTrace();
        }
    }
    
    private void savePreferences() {
        prefs.put("COMPort", jcbSerialPort.getSelectedItem().toString());
        prefs.put("IntegrationTime", jtfIntegrationTime.getText());
        prefs.put("AvgScans", jtfAvgScans.getText());
        
        
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton3 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jpSettings = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jcbSerialPort = new javax.swing.JComboBox();
        jbConnect = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jtfAvgScans = new javax.swing.JTextField();
        jbSetAvgScans = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jtfIntegrationTime = new javax.swing.JTextField();
        jbSetIntegratonTime = new javax.swing.JButton();
        jbScan = new javax.swing.JButton();
        jpOutput = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtaScans = new javax.swing.JTextArea();
        jbClearText = new javax.swing.JButton();
        jbExit = new javax.swing.JButton();

        jButton3.setText("jButton3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("STS GUI");

        jLabel1.setText("Serial Port");

        jcbSerialPort.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "COM1" }));

        jbConnect.setText("Connect");
        jbConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbConnectActionPerformed(evt);
            }
        });

        jLabel2.setText("Average Scans");

        jtfAvgScans.setColumns(10);
        jtfAvgScans.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jtfAvgScans.setText("10");

        jbSetAvgScans.setText("Set");
        jbSetAvgScans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSetAvgScansActionPerformed(evt);
            }
        });

        jLabel3.setText("Integration Time");

        jtfIntegrationTime.setColumns(10);
        jtfIntegrationTime.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jtfIntegrationTime.setText("5000000");

        jbSetIntegratonTime.setText("Set");
        jbSetIntegratonTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSetIntegratonTimeActionPerformed(evt);
            }
        });

        jbScan.setText("Scan!");
        jbScan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbScanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpSettingsLayout = new javax.swing.GroupLayout(jpSettings);
        jpSettings.setLayout(jpSettingsLayout);
        jpSettingsLayout.setHorizontalGroup(
            jpSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpSettingsLayout.createSequentialGroup()
                .addGroup(jpSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpSettingsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jpSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpSettingsLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jcbSerialPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jbConnect))
                            .addGroup(jpSettingsLayout.createSequentialGroup()
                                .addGroup(jpSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jpSettingsLayout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jtfAvgScans, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jpSettingsLayout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jtfIntegrationTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jpSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jbSetIntegratonTime)
                                    .addComponent(jbSetAvgScans)))))
                    .addGroup(jpSettingsLayout.createSequentialGroup()
                        .addGap(142, 142, 142)
                        .addComponent(jbScan)))
                .addContainerGap(161, Short.MAX_VALUE))
        );
        jpSettingsLayout.setVerticalGroup(
            jpSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpSettingsLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jpSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jcbSerialPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbConnect))
                .addGap(18, 18, 18)
                .addGroup(jpSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jtfAvgScans, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbSetAvgScans))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtfIntegrationTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbSetIntegratonTime))
                .addGap(18, 18, 18)
                .addComponent(jbScan)
                .addContainerGap(67, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Settings", jpSettings);

        jtaScans.setColumns(20);
        jtaScans.setRows(5);
        jtaScans.setText("Still nothing interesting here... ");
        jScrollPane1.setViewportView(jtaScans);

        jbClearText.setText("Clear");

        javax.swing.GroupLayout jpOutputLayout = new javax.swing.GroupLayout(jpOutput);
        jpOutput.setLayout(jpOutputLayout);
        jpOutputLayout.setHorizontalGroup(
            jpOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpOutputLayout.createSequentialGroup()
                .addContainerGap(328, Short.MAX_VALUE)
                .addComponent(jbClearText)
                .addContainerGap())
        );
        jpOutputLayout.setVerticalGroup(
            jpOutputLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpOutputLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbClearText)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Output", jpOutput);

        jbExit.setText("Exit");
        jbExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbExitActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(339, Short.MAX_VALUE)
                .addComponent(jbExit)
                .addContainerGap())
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jbExit)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbSetAvgScansActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSetAvgScansActionPerformed

        sts.setScanAverage(Integer.parseInt(jtfAvgScans.getText()));     }//GEN-LAST:event_jbSetAvgScansActionPerformed

    private void jbSetIntegratonTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSetIntegratonTimeActionPerformed

        sts.setIntegrationTime(Integer.parseInt(jtfIntegrationTime.getText()));     }//GEN-LAST:event_jbSetIntegratonTimeActionPerformed

    private void jbConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbConnectActionPerformed
        if (jbConnect.getText().equals("Connect")) {             
            connectSTS();
            connected=true;
            savePreferences();             
            if (connected) {                 
                    jbConnect.setText("Disconnect");             
            }         
        } else {             
            try {                 
                    connected=false;
                    jbConnect.setText("Connect");             
            } catch (Exception e) {                 
                    e.printStackTrace();             
            }         
        }
    }//GEN-LAST:event_jbConnectActionPerformed

    private void jbExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbExitActionPerformed
        savePreferences();
        System.exit(0);
    }//GEN-LAST:event_jbExitActionPerformed

    private void jbScanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbScanActionPerformed
        STSMessage msg = new STSMessage(STSMessage.MSG_GET_CORRECTED_SPECTRUM);
        sts.sendMessage(msg);
        //TODO: Get the response message and show the spectrum
    }//GEN-LAST:event_jbScanActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(STSGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(STSGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(STSGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(STSGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new STSGui().setVisible(true);
            }
        });
    }
    
    STSDriver sts;
    private String serialPortID="COM1";
    boolean connected = false;
    private Preferences prefs;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jbClearText;
    private javax.swing.JButton jbConnect;
    private javax.swing.JButton jbExit;
    private javax.swing.JButton jbScan;
    private javax.swing.JButton jbSetAvgScans;
    private javax.swing.JButton jbSetIntegratonTime;
    private javax.swing.JComboBox jcbSerialPort;
    private javax.swing.JPanel jpOutput;
    private javax.swing.JPanel jpSettings;
    private javax.swing.JTextArea jtaScans;
    private javax.swing.JTextField jtfAvgScans;
    private javax.swing.JTextField jtfIntegrationTime;
    // End of variables declaration//GEN-END:variables
}
